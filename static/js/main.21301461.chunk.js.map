{"version":3,"sources":["utils/salaryFormat.js","utils/endingsYear.js","components/CalcDed/CalcDed.jsx","utils/prefix.js","utils/salaryInit.js","components/Popup/Popup.jsx","utils/showRub.js","components/App/App.jsx","index.js"],"names":["salaryFormat","inputVal","formatNum","toString","replace","endingsYear","number","titles","MAX_DEDUCTION","CalcDed","salary","useState","isCalc","setIsCalc","useEffect","className","type","onClick","yearSalary","annualDeduction","Math","floor","maxDeduction","restDeduction","allDeductions","Array","fill","deductions","map","row","index","name","id","htmlFor","evt","preventDefault","salaryInit","formatVal","parseInt","trim","Popup","handleClosePopup","setSalary","wrapper","useRef","ref","target","current","placeholder","required","value","onChange","inputValue","document","querySelector","remove","input","fontSize","parseFloat","getComputedStyle","newSpan","createElement","style","innerHTML","body","appendChild","width","offsetWidth","showR","position","left","bottom","pointerEvents","classList","add","textContent","after","showRub","Number","App","isPopup","setIsPopup","disabled","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21301461.chunk.js","sourcesContent":["export default function salaryFormat(inputVal) {\n  const formatNum = inputVal.toString().replace(/(\\d)(?=(\\d{3})+$)/g, '$1 ');\n  const formatValue = `${formatNum}`;\n  return formatValue;\n}\n","export default function endingsYear(number) {\n  const titles = ['ый', 'ой', 'ий'];\n\n  if (number % 100 > 8 && number % 100 < 22) return titles[0];\n  if ((number % 10 < 9 && number % 10 > 5) || number % 10 === 2) return titles[1];\n  if (number % 10 === 3) return titles[2];\n  return titles[0];\n}\n","import React, { useState, useEffect } from 'react';\nimport T from 'prop-types';\nimport './calc-ded.scss';\nimport salaryFormat from '../../utils/salaryFormat';\nimport endingsYear from '../../utils/endingsYear';\nimport prefix from '../../utils/prefix';\n\nconst MONTH_COUNT = 12;\nconst TAX = 0.13;\nconst MAX_DEDUCTION = 260000;\n\nconst CalcDed = ({ salary }) => {\n  const [isCalc, setIsCalc] = useState(false);\n\n  useEffect(() => {\n    setIsCalc(false);\n  }, [salary]);\n\n  const deductions = () => {\n    const yearSalary = salary * MONTH_COUNT;\n    const annualDeduction = Math.floor(yearSalary * TAX);\n\n    const maxDeduction = Math.floor(MAX_DEDUCTION / annualDeduction);\n    const restDeduction = MAX_DEDUCTION % annualDeduction;\n\n    const allDeductions = new Array(maxDeduction).fill(annualDeduction);\n    return ([...allDeductions, restDeduction]);\n  };\n\n  return (\n    <fieldset className=\"calc-ded\">\n      <button\n        type=\"button\"\n        className=\"calc-ded__calc\"\n        onClick={() => salary && setIsCalc(true)}\n      >Рассчитать</button>\n\n      {isCalc\n      && (<div className=\"calc-ded__total\">\n        <h3 className=\"calc-ded__total-header\">\n          Итого можете внести в&nbsp;качесте&nbsp;досрочных:\n        </h3>\n        <ul className=\"calc-ded__list\">\n          {deductions().map((row, index) => (\n            <li key={index + 1} className=\"calc-ded__row\">\n            <input\n              type=\"checkbox\"\n              className=\"calc-ded__check visually-hidden\"\n              name={`tax-${index + 1}-year`}\n              id={`tax-${index + 1}-year`}\n            />\n            <label\n              htmlFor={`tax-${index + 1}-year`}\n              className=\"calc-ded__label\"\n          >{salaryFormat(row)} рублей{' '}\n            <span>{prefix(index + 1)} {index + 1}-{endingsYear(index + 1)} год</span></label>\n          </li>\n          ))}\n        </ul>\n      </div>)}\n\n      <div className=\"calc-ded__controls\">\n        <h3 className=\"calc-ded__controls-header\">Что уменьшаем?</h3>\n        <button\n          type=\"button\"\n          className=\"calc-ded__controls-btn calc-ded__controls-btn--active\"\n        >Платёж</button>\n\n        <button\n          type=\"button\"\n          className=\"calc-ded__controls-btn\"\n        >Срок</button>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"calc-ded__btn-add\"\n        onClick={(evt) => evt.preventDefault()}\n      >Добавить</button>\n    </fieldset>\n  );\n};\n\nCalcDed.propTypes = {\n  salary: T.any,\n};\n\nexport default CalcDed;\n","export default function prefix(number) {\n  return number === 2 ? 'во' : 'в';\n}\n","export default function salaryInit(formatVal) {\n  return parseInt(formatVal.replace(/\\s+/g, '').trim(), 10);\n}\n","import React, { useState, useRef } from 'react';\nimport T from 'prop-types';\nimport './popup.scss';\nimport CalcDed from '../CalcDed';\nimport salaryFormat from '../../utils/salaryFormat';\nimport salaryInit from '../../utils/salaryInit';\nimport showRub from '../../utils/showRub';\n\nconst Popup = ({ handleClosePopup }) => {\n  const [salary, setSalary] = useState('');\n  const wrapper = useRef(null);\n\n  return (\n    <div className=\"popup-wrapper\"\n    ref={wrapper}\n      onClick={(evt) => (\n        evt.target === wrapper.current && handleClosePopup(false)\n      )}\n    >\n      <form className=\"popup\">\n        <fieldset className=\"popup__salary\">\n          <legend className=\"popup__legend\">Налоговый вычет</legend>\n          <p className=\"popup__description\">\n            Используйте налоговый вычет чтобы погасить ипотеку досрочно.{' '}\n            Размер налогового вычета составляет не&nbsp;более&nbsp;13%{' '}\n            от своего официального годового дохода.\n          </p>\n\n          <div className=\"popup__data\">\n            <label\n              htmlFor=\"salary\"\n              className=\"popup__data-label\"\n            >Ваша зарплата в месяц</label>\n\n            <input\n              type=\"text\"\n              id=\"salary\"\n              className=\"popup__data-input\"\n              placeholder=\"Введите данные\"\n              required\n              value={salaryFormat(salary)}\n              onChange={(evt) => {\n                const inputValue = salaryInit(evt.target.value);\n\n                showRub(evt);\n                if (Number(inputValue)) {\n                  setSalary(inputValue && inputValue);\n                  return;\n                }\n\n                setSalary('');\n              }}\n            />\n            <p className=\"popup__data-none\">Поле обязательно для заполнения</p>\n          </div>\n        </fieldset>\n\n        <CalcDed salary={salary} />\n\n        <button\n          type=\"button\"\n          className=\"popup__btn-close\"\n          onClick={handleClosePopup}\n        >Закрыть попап</button>\n      </form>\n    </div>\n  );\n};\n\nPopup.propTypes = {\n  handleClosePopup: T.func,\n};\n\nexport default Popup;\n","import salaryInit from './salaryInit';\n\nexport default function showRub(evt) {\n  if (document.querySelector('.dummy-rub')) document.querySelector('.dummy-rub').remove();\n\n  const input = evt.target;\n  const fontSize = parseFloat(getComputedStyle(input).fontSize);\n\n  const newSpan = document.createElement('span');\n  newSpan.style.fontSize = `${fontSize}px`;\n  newSpan.innerHTML = input.value;\n  document.body.appendChild(newSpan);\n  const width = newSpan.offsetWidth + fontSize;\n  newSpan.remove();\n\n  const showR = document.createElement('span');\n  showR.style.position = 'absolute';\n  showR.style.left = `${width}px`;\n  showR.style.bottom = '9px';\n  showR.pointerEvents = 'none';\n  showR.classList.add('dummy-rub');\n  showR.textContent = ' ₽';\n\n  if (salaryInit(input.value)) input.after(showR);\n}\n","import React, { useState } from 'react';\nimport Popup from '../Popup';\nimport './app.scss';\n\nconst App = () => {\n  const [isPopup, setIsPopup] = useState(false);\n\n  return (\n    <section className=\"app\">\n      <button\n        type=\"button\"\n        className=\"app__btn-ded\"\n        onClick={() => setIsPopup(true)}\n        disabled={isPopup}\n      >Налоговый вычет</button>\n\n      {isPopup && <Popup handleClosePopup={() => setIsPopup(false)} />}\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './assets/styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}